// Generated by gencpp from file kinematics/MoveJoint.msg
// DO NOT EDIT!


#ifndef KINEMATICS_MESSAGE_MOVEJOINT_H
#define KINEMATICS_MESSAGE_MOVEJOINT_H

#include <ros/service_traits.h>


#include <kinematics/MoveJointRequest.h>
#include <kinematics/MoveJointResponse.h>


namespace kinematics
{

struct MoveJoint
{

typedef MoveJointRequest Request;
typedef MoveJointResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct MoveJoint
} // namespace kinematics


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::kinematics::MoveJoint > {
  static const char* value()
  {
    return "bc0ca7f92d556a08737d72803818c721";
  }

  static const char* value(const ::kinematics::MoveJoint&) { return value(); }
};

template<>
struct DataType< ::kinematics::MoveJoint > {
  static const char* value()
  {
    return "kinematics/MoveJoint";
  }

  static const char* value(const ::kinematics::MoveJoint&) { return value(); }
};


// service_traits::MD5Sum< ::kinematics::MoveJointRequest> should match
// service_traits::MD5Sum< ::kinematics::MoveJoint >
template<>
struct MD5Sum< ::kinematics::MoveJointRequest>
{
  static const char* value()
  {
    return MD5Sum< ::kinematics::MoveJoint >::value();
  }
  static const char* value(const ::kinematics::MoveJointRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::kinematics::MoveJointRequest> should match
// service_traits::DataType< ::kinematics::MoveJoint >
template<>
struct DataType< ::kinematics::MoveJointRequest>
{
  static const char* value()
  {
    return DataType< ::kinematics::MoveJoint >::value();
  }
  static const char* value(const ::kinematics::MoveJointRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::kinematics::MoveJointResponse> should match
// service_traits::MD5Sum< ::kinematics::MoveJoint >
template<>
struct MD5Sum< ::kinematics::MoveJointResponse>
{
  static const char* value()
  {
    return MD5Sum< ::kinematics::MoveJoint >::value();
  }
  static const char* value(const ::kinematics::MoveJointResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::kinematics::MoveJointResponse> should match
// service_traits::DataType< ::kinematics::MoveJoint >
template<>
struct DataType< ::kinematics::MoveJointResponse>
{
  static const char* value()
  {
    return DataType< ::kinematics::MoveJoint >::value();
  }
  static const char* value(const ::kinematics::MoveJointResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // KINEMATICS_MESSAGE_MOVEJOINT_H
